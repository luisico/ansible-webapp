---
- name: Install dependencies
  yum: name={{item}} state=latest
  with_items:
    - git
    - '{{webapp_extra_packages}}'

- name: Add group
  group: name={{webapp_group}} state=present

- name: Add user
  user: name={{webapp_user}} group={{webapp_group}}

- name: Change permissions for user home dir
  file: path=/home/{{webapp_user}} mode={{webapp_user_home_mode}}

- name: Add authorized keys
  authorized_key: user={{webapp_user}} key={{item}}
  with_items: '{{webapp_authorized_keys}}'

- block:
  - name: Get buildpack
    git: repo={{webapp_buildpack}} dest={{webapp_path}}/buildpack
    when: webapp_buildpack is defined and webapp_buildpack != ''

  - name: Setup deployment directories
    deploy_helper: path={{webapp_path}}

  - block:
    - name: Drop app deploy key
      copy: dest={{webapp_path}}/app.key content='{{webapp_repo_private_key}}' owner={{webapp_user}} group={{webapp_group}} mode=0400
      no_log: yes

    - name: Clone app with deploy key
      git: repo={{webapp_repo}} dest={{deploy_helper.new_release_path}} key_file={{webapp_path}}/app.key accept_hostkey=yes version={{webapp_repo_version}}

    when: webapp_repo_private_key is defined

  - name: Clone app without deploy key
    git: repo={{webapp_repo}} dest={{deploy_helper.new_release_path}} accept_hostkey=yes version={{webapp_repo_version}}
    when: webapp_repo_private_key is not defined

  - name: Mark release as unfinished
    file: path={{deploy_helper.new_release_path}}/{{deploy_helper.unfinished_filename}} state=touch

  - name: Set app env variables
    template: dest={{webapp_path}}/env src=env.j2 mode=0640
    when: webapp_env != []

  - name: Add user files
    copy:
      dest: '{{(deploy_helper.new_release_path + "/") if (item.relative is defined and item.relative) else ""}}{{item.dest}}'
      src: '{{item.src | default(omit)}}'
      content: '{{item.content | default(omit)}}'
      mode: '{{item.mode | default("0640")}}'
    with_items: '{{webapp_files}}'
    no_log: '{{item.no_log | default(false)}}'

  - name: Add user cron jobs
    cron:
      name: '{{item.name}}'
      job: '{{item.job | default(omit)}}'
      minute: '{{item.minute | default(omit)}}'
      hour: '{{item.hour | default(omit)}}'
      day: '{{item.day | default(omit)}}'
      month: '{{item.month | default(omit)}}'
      weekday: '{{item.weekday | default(omit)}}'
      special_time: '{{item.special_time | default(omit)}}'
      env: '{{item.env | default("no")}}'
      value: '{{item.value | default(omit)}}'
      disabled: '{{item.disabled | default("no")}}'
      backup: yes
      state: present
    with_items: '{{webapp_cronjobs}}'

  - name: Detect buildpack
    command: '{{webapp_detect}} {{deploy_helper.new_release_path}}'
    environment: '{{webapp_buildpack_env}}'
    when: webapp_buildpack is defined and webapp_buildpack != ''

  - name: Compile buildpack
    command: "{{webapp_compile}} {{deploy_helper.new_release_path}} {{deploy_helper.project_path}}/cache {{deploy_helper.project_path}}/env.d"
    register: webapp__r_compile
    environment: '{{webapp_buildpack_env}}'
    when: webapp_buildpack is defined and webapp_buildpack != ''

  - name: Print compilation output
    debug: msg={{webapp__r_compile.stdout_lines}}
    when: webapp_buildpack is defined and webapp_buildpack != ''

  - name: Finalize the deploy
    deploy_helper: path={{deploy_helper.project_path}} release={{deploy_helper.new_release}} state=finalize
    notify: Restart app

  - name: Add login script to profile
    blockinfile: path=~/.bash_profile block='{{webapp_login_script}}' owner={{webapp_user}} group={{webapp_group}} mode=0622
    when: webapp_login_script | default()

  become: yes
  become_user: '{{webapp_user}}'

- block:
  - name: Install app service
    template: dest=/etc/systemd/system/{{webapp_name}}.service src=systemd.service.j2 owner=root group=root mode=0644
    notify: Restart app

  - name: Start app service
    systemd: name={{webapp_name}} enabled=yes state=started daemon_reload=yes

  when: webapp_start | default()
